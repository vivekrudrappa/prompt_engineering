# -*- coding: utf-8 -*-
"""Kata_marketing_prompting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vC1bedFC2NqHLFjaxJU9h_ue3tp9zmY8

# __Kata: Generating Marketing Content with OpenAI__

## __Steps to Perform:__
Step 1: Set up the OpenAI API Key

Step 2: Define a Function to Get Completion

Step 3: Define Your Prompt

### __Step 1: Set up the OpenAI API Key__

- The code imports the necessary libraries.
- The __os__ is used for interacting with the operating system, and __openai__ is the library required to work with OpenAI's API.
"""

import os
import openai
from google.colab import userdata


openai.api_key  = userdata.get('OPENAI_API_KEY')

"""### __Step 2: Define a Function to Get Completion__
The __get_completion__ function is responsible for sending a prompt to the OpenAI model and receiving its response.

__Parameters:__

- __prompt__: It is the text input for which the model will generate a completion.
- __model__: The gpt-3.5-turbo model is used to perform the tasks.

The __openai.ChatCompletion.create__ function is used to send a request to the OpenAI API.

This request includes the model, the input messages (formatted as a list of dictionaries with user roles and content), and a temperature setting.
"""

def get_completion(prompt, model="gpt-3.5-turbo"):
    messages = [{"role": "user", "content": prompt}]
    response = openai.chat.completions.create(
        model=model,
        messages=messages,
        temperature=1, # this is the degree of randomness of the model's output
    )
    return response.choices[0].message.content

"""### __Step 3: Define Your Prompts__
- The prompt consists of several pieces of customer feedback, each followed by a classification (Positive, Negative, or Neutral).
- These examples serve to teach the model what kind of output is expected.
- The final feedback statement is the new instance for which the classification is sought.
"""

prompt = """
Write some marketing content for a water bottle
"""

response = get_completion(prompt)
print(response)

refined_prompt = """
You are a creative marketing copywriter for a modern, eco-conscious brand.

Here are some examples of our brand voice: clean, nature-inspired, minimalist, optimistic.

Now generate copy for our new product: AquaPure â€” a reusable water bottle made from recycled glass.

Please generate:
1. An Instagram caption (limit 150 characters)
2. An email subject line (under 60 characters)
3. A product tagline (under 10 words)

Use a fresh, eco-positive tone, without exaggeration or greenwashing. Do not repeat the product name more than once. Format clearly.
"""

response = get_completion(refined_prompt)
print(response)

"""In this few-shot solution, the model uses the provided examples to understand the context and criteria for classification, applying that understanding to classify new, unseen feedback. This is particularly useful for more subjective tasks like sentiment analysis, where context and nuance play significant roles."""