# -*- coding: utf-8 -*-
"""Guided_Practice.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-YLwyZPZiZTDaXpPfYrU8Pr_bPBCJ-GD

# **Description:**

In this project, you will learn how to use LangChain, an open-source framework that allows you to build applications with large language models (LLMs) such as OpenAIâ€™s DALL-E.

# **Steps to perform:**
1. Setup the environment
2. Generate image from text
3. Display the generated images

# **Step 1: Setup the environment**

Import the necessary libraries and set up the OpenAI API key
"""

import os
import openai

"""# **Step 2: Generate image from text**

Prompt to enter a description of a historical landmark for which they want to generate an image.
"""

# Prompt for user input
Text_PROMPT = input("Enter a description of a historical landmark: ")


# Generate image
Image_response = openai.Image.create(
    prompt=Text_PROMPT,
    n=1,
    size="256x256"
)

# Display the URL of the generated image
if "data" in Image_response and len(Image_response["data"]) > 0:
    print(Image_response["data"][0]["url"])
else:
    print("No image generated.")

"""# **Step 3: Display the generated images**

Use the openai.Image.create() method to generate images based on historical landmarks and process the response to display the generated images.
"""

import requests
from IPython.display import Image, display

# Example prompt for generating images
landmark_prompts = [
    "The Pyramids of Giza at sunset",
    "The Colosseum in Rome on a sunny day"
]

# Display the generated images for each prompt
for prompt in landmark_prompts:
    response_data = openai.Image.create(
        prompt=prompt,
        n=1,
        size="256x256"
    )

    if response_data and "data" in response_data:
        image_response = response_data["data"]
        for image in image_response:
            url = image.get("url")
            if url:
                display(Image(requests.get(url).content))
            else:
                print("Image URL not found in response.")
    else:
        print("Image generation failed or no response received.")

"""# **Conclusion**
By the end of this project, you will have gained experience in how to use LangChain and OpenAI to generate images from text.

"""

