# -*- coding: utf-8 -*-
"""Demo_Chain_of_Thoughts.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18PeCXtiXtnpcZO9nJEzDEjsohOmz2g5k
"""



"""# __Demo: Chain of Thought Prompting with OpenAI__

## __Steps to Perform:__
Step 1: Set up the OpenAI API Key

Step 2: Define a Function to Get Completion

Step 3: Define Your Prompts

Step 4: Analyze the Output

### __Step 1: Set up the OpenAI API Key__
- Import the required libraries and set up the OpenAI API key.
"""

import os
import openai
from google.colab import userdata

openai.api_key  = userdata.get('OPENAI_API_KEY')

"""### __Step 2: Define a Function to Get Completion__
- Construct a message with the user's prompt.
- Call the __openai.chat.completions.create__ method to get a response from the model.
- The temperature parameter is set to __0__ for deterministic (non-random) responses.
"""

def get_completion(prompt, model="gpt-3.5-turbo"):
    messages = [{"role": "user", "content": prompt}]
    response = openai.chat.completions.create(
        model=model,
        messages=messages,
        temperature=0,
        max_tokens=512
    )
    return response.choices[0].message.content

"""### __Step 3: Define Your Prompts__
- Provide a series of prompts that guide the model through a chain of thought.
- Call the __get_completion__ to get a response from the AI model.
- Print both the prompt and the AI-generated response.
"""

prompts = [
    "Imagine you are a detective trying to solve a mystery.",
    "You arrive at the crime scene and start looking for clues.",
    "You find a strange object at the crime scene. What is it?",
    "How does this object relate to the crime?",
    "Who do you think is the suspect and why?"
]

for prompt in prompts:
    response_content = get_completion(prompt)
    print(f"Prompt: {prompt}")
    print(f"Response: {response_content}")
    print()

"""## __Step 4: Analyze the Output__
Analyze the output of the model. If the output is not satisfactory, you can refine the prompts and repeat the process.

"""

prompt = """

let's analyze the sentiment of the review step by step

1. Identify the Positive aspect of the review and give a score from 10
2. Identify the Negative aspect of the review and give a score from 10
3. Weight the positive and negative aspect to determine the overall sentiment.
4. provide the final sentiment classification with justification for scores used in above steps.

Review: "The product is very well designed product"
"""
response = get_completion(prompt)
print(response)

prompt = """

let's sort the values of the list step by step

1. Start with the unsorted list.
2. Compare each elements and find the smallest value.
3. Place the samllest value in the first position.
4. Repeat the process for all the remaming elements.
5. provide the sorted list.

Sort the list : [3,1,4,6,5,9,2]

"""
response = get_completion(prompt)
print(response)

prompt = """

"You have 12 identical-looking balls, but one is either heavier or lighter.
You have a balance scale and can only use it three times.
Explain step-by-step how you can find the odd ball and determine whether it is heavier or lighter.
Think through the problem carefully and explain your reasoning in detail before giving the final answer."

"""
response = get_completion(prompt)
print(response)

